	/*
	 * 1. 객체지향언어 : "객체"를 "지향"하는 언어로 "객체 중심"으로 돌아간다고 생각하면됨
	 * 
	 * 2. 객체란 : 사전적 정의 현실세계에 독립적으로 존재(목적이 있고 가치가 있고 의미가 있는) 하는 모든것들을 의미 (유형, 무형, 개념, ...)
	 * 			  자바의 입장에서는 메모리영역중 heap영역에 만들어지는 모든것들
	 *           현실세계에서는 객체들간의 상호작용으로 돌아감
	 *           
	 * 3. 객체지향 프로그래밍 : 현실세계의 객체들간의 상호작용
	 *                    프로그래밍을 통해 가상세계로 구현하는 과정
	 * 
	 * 4. 구현하고자 하는 프로그램 상의 필요한 객체들을 만들기 위해서 (즉, 생성하기 위해서)
	 *    : 클래스라는 틀을 먼저 만들어야됨!! (클래스란? 각 객체들의 속성(정보)들을 담아낼 그릇같은존재)
	 *      >> 어떻게? ==> 추상화 + 캡슐화 접목해서 
	 * 
	 * 5. 추상화 과정
	 *    1) 내가 구현하고자 하는 프로그램에서 필요한 객체들을 생각해볼 것 
	 *    2) 그 객체들이 가지는 공통적인 속성, 기능들을 모두 추출할 것 
	 *    3) 추출한 것들을 가지고 내가 구현하고자 했던 프로그램의 "실질적인 목적"에 맞춰 불필요한 속성, 기능들을 제거할 것 
	 *    4) 그렇게 최종적으로 추려진 속성들을 어떤 자료형으로, 어떤 변수명으로 사용할 건지 생각
	 *    
	 *    ex) 학생 관리 프로그램 
	 *        1) 학생관련객체(홍길동학생, 김영희학생, 김말똥학생 ....)
	 *        2) 공통적인 속성 및 기능들 (이름, 나이, 주소, 전화번호, 키, 몸무게, 달리기속도, 학년, 반, 국어점수, 수학점수, 영어점수, 머리색깔, 발사이즈, 먹는다, 똥싼다, 잠잔다, ...)
	 *        3) 학생 "인적사항"을 관리하는 프로그램이라고 한다면 : 이름, 나이, 주소, 전화번호, 학년, 반
	 *           학생 "성적"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 국어점수, 수학점수, 영어점수
	 *           학생 "건강"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 키, 몸무게, 달리기 속도, 먹는다, 똥싼다
	 *           
	 *           결국 추려진게 "이름, 나이, 키" 라는 가정하에
	 *        
	 *        4) 이름 : String name;
	 *           나이 : int age; 
	 *           키   : double height;
	 * 
	 * 6. 위에 선정된 것들을 가지고 본격적인 프로그래밍을 할껀데..
	 * 
	 * 	  1) "변수"만으로 프로그래밍을 한다면??
	 * 
	 *       * 변수 - 하나의 자료형의 하나의 값만을 보관할 수 있음
	 *       
	 *       홍길동 이라는 학생 객체를 만들어내기 위해서? --> String name1 = "홍길동"; int age1 = 20; double height1 = 162.3;
	 *       길말똥 이라는 학생 객체를 만들어내기 위해서? --> String name2 = "김말똥"; int age2 = 21; double height2 = 173.4;
	 *       강개순 이라는 학생 객체를 만들어내기 위해서? --> String name3 = "강개순"; int age3 = 22; double height3 = 182.7;
	 *       .... 등등의 수백명에 해당하는 학생들을 만들어야됨
	 *       
	 *       어떤문제가 발생?? => 수백명에 해당하는 학생들을 만들때 => 수천개의 변수가 만들어짐!! 
	 *       
	 *    2) "배열"로 프로그래밍을 한다면??
	 *    
	 *       * 배열 - 하나의 자료형의 여러개의 값들을 보관할 수 있음
	 *     
	 *     	  학생들의 이름들을 보관하는    String[] name = {"홍길동", "김말똥", "강개순", ...}
	 *       학생들의 나이들을 보관하는          int[] age  = {  20  ,   21  ,   22   , ...}
	 *       학생들의 키  들을 보관하는  double[] height = {162.3 , 173.4  , 182.7 , ...}
	 *       
	 *       어떤문제가 발생?? => 기존의 학생 정보를 지워야 할때 뒤의 정보들을 앞으로 땡기는 과정을 진행해야되는데 혹시라도 실수하면 학생의 정보가 뒤바뀔수있음 
	 *       				  새로운 학생 정보를 기록해야될 때 배열의 크기를 변경할 수 없기때문에 새로운크기의 배열을 만들어서 기존껄 복사한다거나 이런식으로 과정이 복잡 
	 * 
	 *    3) 그래서 나온 개념이 구조체의  개념
	 *    
	 *       * 구조체 - 여러개의 자료형의 여러개의 값들을 보관할 수 있음 
	 *       
	 *       String값도 보관하고, int값도 보관하고, double값도 같이 보관할 수 있도록 나만의 배열같은 자료형을 만들자!!! 그게바로 클래스!!
	 * 		 Student 라는 클래스로 만들꺼임!!  => 객체의 정보를 보관할 그릇과도 같은 이런 클래스들은 => model.vo 패키지에 보관 
	 * 
	 */


